version: '3'

services:
  database:
    image: mysql:5
    ports:
      - 3306:3306
    container_name: database
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=employee_management_system
      - MYSQL_USER=user
      - MYSQL_PASSWORD=root
    volumes:
      - dockerSpringDatabaseData:/var/lib/mysql
    networks:
      - backendNetwork
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
  springapi:
    image: openjdk:8
    container_name: springapi
    ports:
      - 8080:8080
    depends_on:
      - database
    volumes:
      - ./target/springboot-backend.jar:/application.jar
    command: ["java", "-jar", "application.jar"]
    networks:
      - backendNetwork
      - frontendNetwork
  my_react_ui:
    image: my_react_ui:dev
    environment:
     - CHOKIDAR_USEPOLLING=true my_react_ui:dev
    ports: 
     - 3000:3000
    depends_on:
      - springapi
    networks:
      - frontendNetwork

volumes:
  dockerSpringDatabaseData:
  
networks:
  backendNetwork:
  frontendNetwork: